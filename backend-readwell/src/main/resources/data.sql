-- Creating test_data table
CREATE TABLE IF NOT EXISTS test_data (
    id SERIAL PRIMARY KEY,
    message VARCHAR(255) NOT NULL
);

INSERT INTO test_data (message) VALUES ('Hello from the database!');

-- Creating Users table
CREATE TABLE IF NOT EXISTS readwell_users (
    id bigint generated by default as identity PRIMARY KEY,
    email varchar(255),
    is_admin boolean NOT NULL,
    password varchar(255)
);

-- Creating generated_otp table
CREATE TABLE IF NOT EXISTS generated_otp (
    id bigint generated by default as identity PRIMARY KEY,
    email varchar(255) NOT NULL,
    otp varchar(6) NOT NULL
);

-- Creating Klass table
CREATE TABLE IF NOT EXISTS klasses (
    id bigint generated by default as identity PRIMARY KEY,
    name varchar(255) NOT NULL
);

-- Creating Subjects table
CREATE TABLE IF NOT EXISTS subjects (
    id bigint generated by default as identity PRIMARY KEY,
    name varchar(255) NOT NULL,
    klass_id bigint,
    FOREIGN KEY (klass_id) REFERENCES klasses(id) ON DELETE CASCADE
);

-- Creating Topics table
CREATE TABLE IF NOT EXISTS topics (
    id bigint generated by default as identity PRIMARY KEY,
    name varchar(255) NOT NULL,
    subject_id bigint,
    FOREIGN KEY (subject_id) REFERENCES subjects(id) ON DELETE CASCADE
);

-- Creating Questions table
CREATE TABLE IF NOT EXISTS questions (
    id bigint generated by default as identity PRIMARY KEY,
    question_text VARCHAR(255) NOT NULL,
    topic_id bigint,
    FOREIGN KEY (topic_id) REFERENCES topics(id) ON DELETE CASCADE
);

-- Creating Question Options table
CREATE TABLE IF NOT EXISTS question_options (
    id bigint generated by default as identity PRIMARY KEY,
    question_id bigint NOT NULL,
    option_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
);

-- Creating Correct Answers table
CREATE TABLE IF NOT EXISTS correct_answers (
    id bigint generated by default as identity PRIMARY KEY,
    question_id bigint NOT NULL,
    answer_value VARCHAR(255) NOT NULL,
    FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
);
